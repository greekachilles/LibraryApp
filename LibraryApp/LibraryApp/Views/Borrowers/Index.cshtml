@model IEnumerable<LibraryApp.Models.Borrower>

@using Microsoft.AspNetCore.Identity
@using LibraryApp.Models

@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Age)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phone)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                    @if (signInManager.IsSignedIn(User))
                    {
                        var currentUser = await userManager.GetUserAsync(User);
                        var isAdmin = currentUser != null
                            && await userManager.IsInRoleAsync(
                                currentUser, Constants.AdminRole);

                        if (isAdmin)
                        {
                            @HtmlEncoder.Encode("|")
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                            @HtmlEncoder.Encode("|")
                            <a asp-action="Delete" ifp-route-id="@item.Id">Delete</a>



                        }
                    }



                </td>
            </tr>
        }
    </tbody>
</table>
